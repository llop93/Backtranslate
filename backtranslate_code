wt_prot='MAAFMKLIQFLATKGQKYVSLAWKHKGTILKWINAGQSFEWIYKQIKKLWA'
wt_DNA='atggcagcatttatgaagttaattcagttcttagcaactaaaggtcaaaagtatgtttcacttgcatggaaacataaaggtactattttaaaatggattaacgccggtcaaagttttgaatggatttataaacaaatcaaaaaattatgggcc'
mut=str(input("paste new sequence(s): ")).upper()
mut=' '.join(mut.split())
Ecoli_backcode = {
    'A':'GCG', 'C':'TGC', 'D':'GAT', 'E':'GAA',
    'F':'TTC', 'G':'GGC', 'H':'CAT', 'I':'ATT',
    'K':'AAA', 'L':'CTG', 'M':'ATG', 'N':'AAC',
    'P':'CCG', 'R':'CGT', 'S':'AGC', 'T':'ACC',
    'V':'GTG', 'W':'TGG', 'Y':'TAT', 'Q':'CAG', '*':'TAA', '\n':'\n', ' ':'\n'}
count_ref = 1
count_mut = 1
new_DNA=""
mutant_number = 1
for aa in mut:
    if mut[count_mut-1] == wt_prot[count_ref-1]:
        new_DNA+=str(wt_DNA[((count_ref-1)*3):((count_ref-1)*3+3)])
    elif mut[count_mut-1] == '*':
        new_DNA+="\n"
    else: 
        new_DNA+=str(Ecoli_backcode[mut[count_mut-1]])
    count_ref+=1
    count_mut+=1
    if (count_mut)%(len(wt_prot)+1) == 0 and (count_mut) != 0:
        mutant_number +=1
        count_ref = 0
new_DNA = new_DNA.splitlines()
to_order = ''
for gene in new_DNA:
    to_order += '\n'+'ATTCAGGCTGCGAGTATGCAAGCTAGCCTCCCGGGGCGAATTAATACGACTCACTATAGGGCTTAAGTATAAGGAGGAAAAAAT'+gene+'TAACTAGCATAACCCCTTGGGGCCTCTAAACGGGTCTTGAGGGGTTTTTTGCCCGGGAGGTCA'+'\n'
print(to_order)
